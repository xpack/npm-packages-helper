{% render "_xpack-dev-tools/.github/workflows/copyright-liquid.yml" %}

{% assign platforms_array = platforms | split: "," %}

name: 'Build xPack {{packageConfig.longName}} linux-arm'

on:
  workflow_dispatch:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
    inputs:
      version:
        description: 'The semver of the release'
        required: false
        type: string
        default: 'current'
      xpm_version:
        description: 'The version of xpm to install'
        required: false
        type: string
        default: 'next'
      xpm_install_loglevel:
        description: 'Optional loglevel for xpm install'
        required: false
        default: 'info'
        type: choice
        options:
        - silent
        - warn
        - info
        - verbose
        - debug
        - trace
      xpm_install_options:
        description: 'Optional switches to pass to xpm install'
        required: false
        type: string
        default: ''
      helper-git-ref:
        description: 'The helper branch, tag or SHA to checkout'
        required: false
        default: 'xpack-development'

jobs:
{% for platform in platforms_array %}
{% if platform == "linux-arm" %}
  {{platform}}-build:
    name: '{{platform}} {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} build'
    timeout-minutes: 2880 # 2 days
    runs-on: [self-hosted, linux, arm, xbbla32]
    container:
      image: ilegeul/ubuntu:arm32v7-18.04-xbb-v5.2.1
    defaults:
      run:
        shell: bash

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          echo "node: $(node --version)"
          echo "npm: $(npm --version)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      - name: 'Checkout project'
        uses: actions/checkout@v1 # v1 for old Git
        with:
          fetch-depth: 3

      - name: 'Install xpm'
        timeout-minutes: 1440
        run: |
          npm install --location=global xpm@{% raw %}${{github.event.inputs.xpm_version}}{% endraw %}
          xpm --version

      - name: 'Install project dependencies'
        timeout-minutes: 1440
        run: xpm install --loglevel {% raw %}${{github.event.inputs.xpm_install_loglevel}}{% endraw %} {% raw %}${{github.event.inputs.xpm_install_options}}{% endraw %} -C build-assets

      - name: 'Build {{platform}} binaries'
        timeout-minutes: 1440
        run: |
          xpm install --config {{platform}} --loglevel {% raw %}${{github.event.inputs.xpm_install_loglevel}}{% endraw %} {% raw %}${{github.event.inputs.xpm_install_options}}{% endraw %} -C build-assets
          xpm run build --config {{platform}} -C build-assets

  {{platform}}-upload:
    name: '{{platform}} {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} upload'
    timeout-minutes: 2880 # 2 days
    runs-on: [self-hosted, linux, arm, xbbla32]
    defaults:
      run:
        shell: bash
    needs: [{{platform}}-build]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          echo "node: $(node --version)"
          echo "npm: $(npm --version)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: Upload platform artefacts
        uses: actions/upload-artifact@v4
        with:
          name: deploy-{{platform}}
          path: {% raw %}${{github.workspace}}{% endraw %}/build-assets/build/{{platform}}/deploy/*
          overwrite: true

      - name: 'Publish pre-release'
        # https://github.com/ncipollo/release-action
        uses: ncipollo/release-action@v1.13.0 # v1.13 for 18.04
        with:
          allowUpdates: true
          artifacts: 'build-assets/build/{{platform}}/deploy/*'
          bodyFile: '.github/workflows/body-github-pre-releases-test.md'
          commit: 'master'
          draft: false
          name: 'Test binaries'
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          owner: 'xpack-dev-tools'
          prerelease: true
          replacesArtifacts: true
          repo: 'pre-releases'
          tag: 'test'
          token: {% raw %}${{secrets.PUBLISH_TOKEN}}{% endraw %}

      - name: 'Rename working area'
        # For just in case absolute paths remain unprocessed.
        run: echo mv -v build-assets/build build-assets/build-$(date -u +%Y%m%d-%H%M%S)

  {{platform}}-test:
    name: '{{platform}} {{packageName}}@{% raw %}${{github.event.inputs.version}}{% endraw %} test'
    runs-on: [self-hosted, linux, arm, xbbla32]
    needs: [{{platform}}-upload]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{github.event.inputs.version}}{% endraw %} docker test'
        uses: docker://arm32v7/node:lts-slim # Currently based on debian:12-slim
        with:
          entrypoint: /bin/bash # /usr/bin/linux32
          args: /github/workspace/build-assets/scripts/test.sh --image debian --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url pre-release

{% if packageConfig.showTestsResults == 'true' %}
      - name: Upload platform tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report-{{platform}}
          path: {% raw %}${{github.workspace}}{% endraw %}/build-assets/build/{{platform}}/artefacts/tests-report-*.md
          overwrite: true
{% endif %}
{% break %}
{% endif %}
{% endfor %}
