
{% render "_xpack-dev-tools/.github/workflows/copyright-liquid.yml" %}

{% assign platforms = platforms | split: "," %}

# https://github.com/docker-library/official-images#architectures-other-than-amd64

# Debian versions:
# - 8 jessie
# - 9 stretch
# - 10 buster
# - 11 bullseye

# Ubuntu releases
# - 12.04 LTS (Precise Pangolin)
# - 14.04 LTS (Trusty Tahr)
# - 16.04 LTS (Xenial Xerus)
# - 18.04 LTS (Bionic Beaver)
# - 20.04 LTS (Focal Fossa)
# - 22.04 LTS (Jammy Jellyfish)

# -----------------------------------------------------------------------------

name: 'Test xPack {{packageConfig.longName}} on Arm Docker platforms'

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: 'The folder part of the URL where binaries are stored'
        required: false
        default: 'release'
      version:
        description: 'The semver of the release'
        required: false
        default: 'current'
      helper-git-ref:
        description: 'The helper branch, tag or SHA to checkout'
        required: false
        default: 'xpack-development'

# The scripts are executed in the Docker context by GitHub Actions,
# so `native-test.sh` should be fine, it already takes care of updates.
jobs:
{% for platform in platforms %}
{% case platform %}
{% when "linux-arm64" %}
  # https://en.wikipedia.org/wiki/Ubuntu_version_history
  # https://hub.docker.com/_/ubuntu
  # The ubuntu:12.04 image fails to update.
  ubuntu-arm64:
    name: 'arm64 {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on Ubuntu stable'
    runs-on: [self-hosted, linux, arm64, xbbla]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Ubuntu 22.04 arm64'
        uses: docker://ubuntu:22.04
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image ubuntu:22.04 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

      - name: 'Ubuntu 20.04 arm64'
        uses: docker://ubuntu:20.04
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image ubuntu:20.04 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

      - name: 'Ubuntu 18.04 arm64'
        uses: docker://ubuntu:18.04
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image ubuntu:18.04 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

  # https://en.wikipedia.org/wiki/Debian_version_history
  # https://hub.docker.com/_/debian
  debian-arm64:
    name: 'arm64 {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on Debian stable'
    runs-on: [self-hosted, linux, arm64, xbbla]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Debian 11 arm64'
        uses: docker://debian:bullseye
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image debian:bullseye --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

      - name: 'Debian 10 arm64'
        uses: docker://debian:buster
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image debian:buster --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}


  # https://hub.docker.com/r/redhat/ubi8
  # For `-static` to work, explicit static packages must be present.
  redhat-arm64:
    name: 'arm64 {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on RedHat stable'
    runs-on: [self-hosted, linux, arm64, xbbla]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'RedHat 8 arm64'
        uses: docker://redhat/ubi8
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image redhat/ubi8 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

  # https://en.wikipedia.org/wiki/Fedora_version_history
  # https://hub.docker.com/_/fedora
  # For `-static` to work, explicit static packages must be present.
  fedora-arm64:
    name: 'arm64 {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on Fedora stable'
    runs-on: [self-hosted, linux, arm64, xbbla]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Fedora 37 arm64'
        uses: docker://fedora:37
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image fedora:37 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

      - name: 'Fedora 33 arm64'
        uses: docker://fedora:33
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image fedora:33 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

      - name: 'Fedora 29 arm64'
        uses: docker://fedora:29
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image fedora:29 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

  # https://en.wikipedia.org/wiki/OpenSUSE#Releases
  # https://hub.docker.com/u/opensuse
  # `-static` disabled, there is no static libc.a.
  opensuse-arm64:
    name: 'arm64 {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on OpenSUSE stable'
    runs-on: [self-hosted, linux, arm64, xbbla]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'OpenSUSE 15.6 arm64'
        uses: docker://opensuse/leap:15.6
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image opensuse/leap:15.6 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

      - name: 'OpenSUSE 15.5 arm64'
        uses: docker://opensuse/leap:15.5
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image opensuse/leap:15.5 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

  # ---------------------------------------------------------------------------

  ubuntu-arm64-latest:
    name: 'arm64 {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on Ubuntu latest'
    runs-on: [self-hosted, linux, arm64, xbbla]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Ubuntu latest arm64'
        uses: docker://ubuntu:22.04
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image ubuntu:22.04 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}
      # ubuntu:rolling fails during update

  debian-arm64-latest:
    name: 'arm64 {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on Debian latest'
    runs-on: [self-hosted, linux, arm64, xbbla]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Debian testing arm64'
        uses: docker://debian:testing
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image debian:testing --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

      - name: 'Debian latest arm64'
        uses: docker://debian:latest
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image debian:latest --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

  # https://en.wikipedia.org/wiki/Fedora_version_history
  # https://hub.docker.com/_/fedora
  # `-static` disabled, there is no static libc.a.
  fedora-arm64-latest:
    name: 'arm64 {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on Fedora latest'
    runs-on: [self-hosted, linux, arm64, xbbla]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Fedora latest arm64'
        uses: docker://fedora:latest
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image fedora:latest --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

  # - https://hub.docker.com/r/opensuse/tumbleweed
  opensuse-arm64-latest:
    name: 'arm64 {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on OpenSUSE latest'
    runs-on: [self-hosted, linux, arm64, xbbla]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'OpenSUSE tumbleweed arm64'
        uses: docker://opensuse/tumbleweed
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image opensuse/tumbleweed --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}
{% when "linux-arm" %}
  # https://hub.docker.com/r/arm32v7/ubuntu/
  ubuntu-arm:
    name: 'arm {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on Ubuntu stable'
    runs-on: [self-hosted, linux, arm, xbbla32]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Ubuntu 22.04 arm'
        uses: docker://arm32v7/ubuntu:22.04
        with:
          entrypoint: /bin/bash # /usr/bin/linux32
          args: /github/workspace/build-assets/scripts/test.sh --image arm32v7/ubuntu:22.04 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

      - name: 'Ubuntu 20.04 arm'
        uses: docker://arm32v7/ubuntu:20.04
        with:
          entrypoint: /bin/bash # /usr/bin/linux32
          args: /github/workspace/build-assets/scripts/test.sh --image arm32v7/ubuntu:20.04 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

      - name: 'Ubuntu 18.04 arm'
        uses: docker://arm32v7/ubuntu:18.04
        with:
          entrypoint: /bin/bash # /usr/bin/linux32
          args: /github/workspace/build-assets/scripts/test.sh --image arm32v7/ubuntu:18.04 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

  # https://hub.docker.com/r/arm32v7/debian
  debian-arm:
    name: 'arm {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on Debian stable'
    runs-on: [self-hosted, linux, arm, xbbla32]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Debian 11 arm'
        uses: docker://arm32v7/debian:bullseye
        with:
          entrypoint: /bin/bash # /usr/bin/linux32
          args: /github/workspace/build-assets/scripts/test.sh --image arm32v7/debian:bullseye --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

      - name: 'Debian 10 arm'
        uses: docker://arm32v7/debian:buster
        with:
          entrypoint: /bin/bash # /usr/bin/linux32
          args: /github/workspace/build-assets/scripts/test.sh --image arm32v7/debian:buster --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

  # https://hub.docker.com/r/arm32v7/ubuntu/
  ubuntu-arm-latest:
    name: 'arm {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on Ubuntu latest'
    runs-on: [self-hosted, linux, arm, xbbla32]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Ubuntu latest arm'
        uses: docker://arm32v7/ubuntu:22.04
        with:
          entrypoint: /bin/bash # /usr/bin/linux32
          args: /github/workspace/build-assets/scripts/test.sh --image arm32v7/ubuntu:22.04 --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

  # # https://hub.docker.com/r/arm32v7/debian
  # debian-arm-latest:
  #   name: 'arm {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on Debian latest'
  #   runs-on: [self-hosted, linux, arm, xbbla32]

  #   steps:
  #     - name: 'Show environment'
  #       run: |
  #         uname -a
  #         lsb_release -sd
  #         echo "whoami: $(whoami)"
  #         echo "pwd: $(pwd)"
  #         ls -lLA
  #         env | sort | grep -E '^[^ \t]+='

  #     - name: 'Clean working area' # Mandatory for self-hosted runners.
  #       run: |
  #         chmod -Rf a+w * || true
  #         rm -rf * .git*

  #     # https://github.com/actions/checkout
  #     - name: 'Checkout project'
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 3

  #     - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
  #       uses: actions/checkout@v4
  #       with:
  #         repository: xpack-dev-tools/xbb-helper-xpack
  #         path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
  #         ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
  #         fetch-depth: 3

  #     - name: 'Debian testing arm'
  #       uses: docker://arm32v7/debian:testing
  #       with:
  #         entrypoint: /bin/bash # /usr/bin/linux32
  #         args: /github/workspace/build-assets/scripts/test.sh --image arm32v7/debian:testing --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

  #     - name: 'Debian latest arm'
  #       uses: docker://arm32v7/debian:latest
  #       with:
  #         entrypoint: /bin/bash # /usr/bin/linux32
  #         args: /github/workspace/build-assets/scripts/test.sh --image arm32v7/debian:latest --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

  # https://en.wikipedia.org/wiki/Fedora_version_history
  # https://hub.docker.com/r/arm32v7/fedora
  # `-static` disabled, there is no static libc.a.
  fedora-arm-latest:
    name: 'arm {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test on Fedora latest'
    runs-on: [self-hosted, linux, arm, xbbla32]

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v4
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Fedora latest arm'
        uses: docker://arm32v7/fedora:latest
        with:
          entrypoint: /bin/bash
          args: /github/workspace/build-assets/scripts/test.sh --image arm32v7/fedora:latest --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

  # - https://hub.docker.com/r/arm32v7/opensuse
  # arm32v7/opensuse:latest is leap 42.3 and fails due to http: URLs
  # (zypper lr -u)
{% endcase %}
{% endfor %}
# -----------------------------------------------------------------------------
