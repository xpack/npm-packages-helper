
{% render "_xpack-dev-tools/.github/workflows/copyright-liquid.yml" %}

{% assign platforms_array = platforms | split: "," %}

name: 'Test {{packageConfig.descriptiveName}} on supported platforms'

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: 'The folder part of the URL where binaries are stored'
        required: false
        default: 'release'
      version:
        description: 'The semver of the release'
        required: false
        default: 'current'
      helper-git-ref:
        description: 'The helper branch, tag or SHA to checkout'
        required: false
        default: 'xpack-development'

jobs:
{% for platform in platforms_array %}
{% case platform %}
{% when "linux-x64" %}
  {{platform}}-test:
    name: '{{platform}} {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test'
    runs-on: ubuntu-24.04

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Checkout project'
        uses: actions/checkout@v5
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v5
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{github.event.inputs.version}}{% endraw %} native test'
        run: bash build-assets/scripts/test.sh --image github-actions-ubuntu-latest --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

{% if packageConfig.showTestsResults == 'true' %}
      - name: Upload platform tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report-{{platform}}
          path: {% raw %}${{github.workspace}}{% endraw %}/build-assets/build/{{platform}}/artefacts/tests-report-*.md
          overwrite: true
{% endif %}
{% when "linux-arm64" %}
  {{platform}}-test:
    name: '{{platform}} {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test'
    # runs-on: [self-hosted, linux, arm64, xbbla]
    runs-on: ubuntu-24.04-arm

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Checkout project'
        uses: actions/checkout@v5
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v5
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{github.event.inputs.version}}{% endraw %} native test'
        run: bash build-assets/scripts/test.sh --image github-actions-ubuntu-latest --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

{% if packageConfig.showTestsResults == 'true' %}
      - name: Upload platform tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report-{{platform}}
          path: {% raw %}${{github.workspace}}{% endraw %}/build-assets/build/{{platform}}/artefacts/tests-report-*.md
          overwrite: true
{% endif %}
{% when "darwin-x64" %}
  {{platform}}-test:
    name: '{{platform}} {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test'
    # https://github.com/actions/runner-images/blob/main/images/macos/macos-15-Readme.md
    runs-on: macos-15-intel

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          sw_vers
          ls -lA /Library/Developer/CommandLineTools/SDKs || true
          ls -lA /Applications
          sudo xcode-select --switch /Applications/Xcode_16.4.app
          xcode-select --print-path
          xcodebuild -version || true
          pkgutil --pkg-info=com.apple.pkg.CLTools_Executables || true
          clang++ -v
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Remove Homebrew'
        uses: xpack/remove-homebrew-action@v1

{%- if packageConfig.useSelfHostedRunners == "true" %}
      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*
{%- endif %}

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v5
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v5
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{github.event.inputs.version}}{% endraw %} native test'
        run: bash build-assets/scripts/test.sh --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

{% if packageConfig.showTestsResults == 'true' %}
      - name: Upload platform tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report-{{platform}}
          path: {% raw %}${{github.workspace}}{% endraw %}/build-assets/build/{{platform}}/artefacts/tests-report-*.md
          overwrite: true
{% endif %}
{% when "darwin-arm64" %}
  {{platform}}-test:
    name: '{{platform}} {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test'
    # https://github.com/actions/runner-images/blob/main/images/macos/macos-15-Readme.md
    runs-on: macos-15

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          sw_vers
          ls -lA /Library/Developer/CommandLineTools/SDKs || true
          ls -lA /Applications
          sudo xcode-select --switch /Applications/Xcode_16.4.app
          xcode-select --print-path
          xcodebuild -version || true
          pkgutil --pkg-info=com.apple.pkg.CLTools_Executables || true
          clang++ -v
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      - name: 'Remove Homebrew'
        uses: xpack/remove-homebrew-action@v1

{%- if packageConfig.useSelfHostedRunners == "true" %}

      - name: 'Clean working area' # Mandatory for self-hosted runners.
        run: |
          chmod -Rf a+w * || true
          rm -rf * .git*
{%- endif %}

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v5
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v5
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Run {% raw %}${{github.event.inputs.version}}{% endraw %} native test'
        run: bash build-assets/scripts/test.sh --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

{% if packageConfig.showTestsResults == 'true' %}
      - name: Upload platform tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report-{{platform}}
          path: {% raw %}${{github.workspace}}{% endraw %}/build-assets/build/{{platform}}/artefacts/tests-report-*.md
          overwrite: true
{% endif %}
{% when "win32-x64" %}
  {{platform}}-test:
    name: '{{platform}} {{packageName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test 2025'
    runs-on: windows-2025
    defaults:
      run:
        # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsshell
        shell: bash # for --

    steps:
      - name: 'Show environment'
        run: |
          uname -a
          systeminfo # lsb_release -sd
          echo "whoami: $(whoami)"
          echo "pwd: $(pwd)"
          ls -lLA
          env | sort | grep -E '^[^ \t]+='

      # https://github.com/actions/checkout
      - name: 'Checkout project'
        uses: actions/checkout@v5
        with:
          fetch-depth: 3

      - name: 'Checkout helper {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}'
        uses: actions/checkout@v5
        with:
          repository: xpack-dev-tools/xbb-helper-xpack
          path: build-assets/xpacks/@xpack-dev-tools/xbb-helper
          ref: {% raw %}${{github.event.inputs.helper-git-ref}}{% endraw %}
          fetch-depth: 3

      - name: 'Move workspace to short path for MinGW compatibility'
        run: |
          echo Creating D:\t short name folder...
          mkdir D:\t

          echo Moving workspace to D:\t...
          robocopy "%GITHUB_WORKSPACE%" "D:\t" /E /MOVE /NFL /NDL /NJH /NJS /NC /NS

          if %ERRORLEVEL% LEQ 3 (
            echo ✓ Workspace successfully moved to D:\t
            dir D:\t
          ) else (
            echo ✗ Failed to move workspace, robocopy exit code: %ERRORLEVEL%
            exit /b 1
          )
        shell: cmd

      - name: 'Run {% raw %}${{github.event.inputs.version}}{% endraw %} native test'
        working-directory: D:\t
        # Run the test from the short path
        run: bash build-assets/scripts/test.sh --version {% raw %}${{github.event.inputs.version}}{% endraw %} --base-url {% raw %}${{github.event.inputs.base_url}}{% endraw %}

{% if packageConfig.showTestsResults == 'true' %}
      - name: Upload platform tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report-{{platform}}
          path: {% raw %}${{github.workspace}}{% endraw %}/build-assets/build/{{platform}}/artefacts/tests-report-*.md
          overwrite: true
{%- endif %}
{% endcase %}
{% endfor %}
{% if packageConfig.showTestsResults == 'true' %}
  generate-tests-report:
    name: 'Generate tests report for {{packageConfig.descriptiveName}}@{% raw %}${{github.event.inputs.version}}{% endraw %}'
    runs-on: ubuntu-24.04
    needs: [{{platforms_array | join: "-test, " | append: "-test"}}]

    steps:
      - name: Download platform test reports
        uses: actions/download-artifact@v4
        with:
          path: {% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts
          merge-multiple: true

      - name: Concatenate platform test reports
        run: |
          ls -lR {% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts
          touch {% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts/tests-report.md
          echo "---" >>{% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts/tests-report.md
          echo "title: {{packageConfig.descriptiveName}} {% raw %}${{github.event.inputs.version}}{% endraw %} test results" >>{% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts/tests-report.md
          echo >>{% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts/tests-report.md
          echo "date: $(date "+%Y-%m-%d %H:%M:%S %z")" >>{% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts/tests-report.md
          echo >>{% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts/tests-report.md
          echo "---" >>{% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts/tests-report.md
          echo >>{% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts/tests-report.md
          (cd {% raw %}${{github.workspace}}{% endraw %}; cat -s {% for platform in platforms_array %}build-assets/artefacts/tests-report-{{platform}}.md {% endfor %} | tee -a build-assets/artefacts/tests-report.md)
          mv -v {% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts/tests-report.md {% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts/{% raw %}${{github.event.inputs.version}}{% endraw %}.md

      - name: Upload tests report
        uses: actions/upload-artifact@v4
        with:
          name: tests-report
          path: {% raw %}${{github.workspace}}{% endraw %}/build-assets/artefacts/{% raw %}${{github.event.inputs.version}}{% endraw %}.md
          overwrite: true
{% endif %}

# -----------------------------------------------------------------------------
